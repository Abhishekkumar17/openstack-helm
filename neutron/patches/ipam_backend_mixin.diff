--- ipam_backend_mixin.orig.py	2016-12-13 14:38:54.000000000 +0000
+++ ipam_backend_mixin.patch.py	2016-12-13 14:45:43.000000000 +0000
@@ -235,15 +235,25 @@
                           'cidr': subnet.cidr})
                 raise n_exc.InvalidInput(error_message=err_msg)
 
+
     def _validate_network_subnetpools(self, network,
                                       new_subnetpool_id, ip_version):
-        """Validate all subnets on the given network have been allocated from
-           the same subnet pool as new_subnetpool_id
+        # """Validate all subnets on the given network have been allocated from
+        #   the same subnet pool as new_subnetpool_id
+        # """
+        # for subnet in network.subnets:
+        #    if (subnet.ip_version == ip_version and
+        #            new_subnetpool_id != subnet.subnetpool_id):
+        #        raise n_exc.NetworkSubnetPoolAffinityError()
+
+
+        """ We actually need that the address scope is checked
+            to be the same for each subnet on the network, since
+            the address scope defines non overlapping pools
+
+            But for now we just return
         """
-        for subnet in network.subnets:
-            if (subnet.ip_version == ip_version and
-                    new_subnetpool_id != subnet.subnetpool_id):
-                raise n_exc.NetworkSubnetPoolAffinityError()
+        return True
 
     def validate_allocation_pools(self, ip_pools, subnet_cidr):
         """Validate IP allocation pools.
