kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: horizon
  labels:
    system: openstack
    type: api
    component: horizon
spec:
  replicas: {{ .Values.pod.replicas.api }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      name: horizon
  template:
    metadata:
      labels:
        name: horizon
{{ tuple . "horizon" "api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        configmap-bin-hash: {{ include (print $.Template.BasePath "/bin-configmap.yaml") . | sha256sum }}
{{- if and (eq .Capabilities.KubeVersion.Major "1") (lt .Capabilities.KubeVersion.Minor "5") }}
        scheduler.alpha.kubernetes.io/affinity: >
            {{ tuple . "horizon" "api" | include "kubernetes_pod_anti_affinity" }}
{{- end }}
    spec:
      containers:
        - name: horizon
          image: {{.Values.global.image_repository}}/{{.Values.global.image_namespace}}/ubuntu-source-horizon-m3:{{.Values.image_version_horizon_m3}}
          imagePullPolicy: IfNotPresent
          command:
            - bash
          args:
            - /container.init/horizon-start
          env:
            - name: DEBUG_CONTAINER
              value: "false"
          ports:
            - name: http
              containerPort: {{.Values.global.horizon_endpoint_port}}
          volumeMounts:
            - mountPath: /horizon-etc
              name: horizon-etc
            - mountPath: /container.init
              name: container-init
      volumes:
        - name: horizon-etc
          configMap:
            name: horizon-etc
        - name: container-init
          configMap:
            name: horizon-bin
            defaultMode: 0755


