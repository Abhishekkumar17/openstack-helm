--- service_builder.orig.py	2016-11-11 15:07:51.000000000 +0100
+++ service_builder.patch.py	2017-01-10 10:31:35.000000000 +0100
@@ -94,11 +94,10 @@
             segment_data = self.disconnected_service.get_network_segment(
                 context, agent_config, network)
             if segment_data:
-                network['provider:segmentation_id'] = \
-                    segment_data.get('segmentation_id', None)
-                if 'provider:network_type' in network:
-                    network['provider:network_type'] = \
-                        segment_data.get('network_type', None)
+
+                network['provider:segmentation_id'] = segment_data.get('segmentation_id', None)
+                network['provider:network_type'] = segment_data.get('network_type', None)
+                network['provider:physical_network'] = segment_data.get('physical_network', None)
             network_map[network_id] = network
 
             # Check if the tenant can create a loadbalancer on the network.
@@ -367,25 +366,26 @@
 
     @log_helpers.log_method_call
     def _is_common_network(self, network, agent):
-        common_external_networks = False
-        common_networks = {}
-
-        if agent and "configurations" in agent:
-            agent_configs = self.deserialize_agent_configurations(
-                agent['configurations'])
-
-            if 'common_networks' in agent_configs:
-                common_networks = agent_configs['common_networks']
-
-            if 'f5_common_external_networks' in agent_configs:
-                common_external_networks = (
-                    agent_configs['f5_common_external_networks'])
-
-        return (network['shared'] or
-                (network['id'] in common_networks) or
-                ('router:external' in network and
-                 network['router:external'] and
-                 common_external_networks))
+        # common_external_networks = False
+        # common_networks = {}
+        #
+        # if agent and "configurations" in agent:
+        #     agent_configs = self.deserialize_agent_configurations(
+        #         agent['configurations'])
+        #
+        #     if 'common_networks' in agent_configs:
+        #         common_networks = agent_configs['common_networks']
+        #
+        #     if 'f5_common_external_networks' in agent_configs:
+        #         common_external_networks = (
+        #             agent_configs['f5_common_external_networks'])
+        #
+        # return (network['shared'] or
+        #         (network['id'] in common_networks) or
+        #         ('router:external' in network and
+        #          network['router:external'] and
+        #          common_external_networks))
+        return True
 
     def _valid_tenant_ids(self, network, lb_tenant_id, agent):
         if (network['tenant_id'] == lb_tenant_id):
